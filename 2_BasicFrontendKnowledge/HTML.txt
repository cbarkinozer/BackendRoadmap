++HTML:
HTML is the standard markup language for creating Web pages.
HTML tags are not case sensitive.

Comment Line:
<!-- This is a comment line in html --> 

Fundamental structure:
<!DOCTYPE html> <!-- This shows the html version --> 
<html><body></body></html> 

Adding Css File:
<link rel="stylesheet" href="css/StyleSheet.css"/> <!--  In head you can bond your css to the html file --> 

Heading:
<h1 style ="background-color:powerblue">My First Heading</h1><!-- You can choose h1-h6 -->
<!-- style is for font and color -->  

Paragraph:
<p>My first paragraph.</p>

Link:
<a href="https://www.w3schools.com">This is a link</a> 

Image:
<img src="img/image.png">

Form: Programmable part of the file.
<Form></Form>

Div: Div lets you define your object. It is modifiable with a css(stylesheet) file.

Formating elements:
<b> Bold text
<strong> Important text
<i> Italic text
<em> Emphasized text
<mark> Marked text
<small> Smaller text
<del> Deleted text
<ins> Inserted text
<sub> Subscript text
<sup> Superscript text

Quotations:
<blokcquote>
<q> short quotation
<abbr> Abbreviations
<address> Contact Information
<cite> Work Title
<bdo> Bi-Directional Override

Colors:
HTML colors consists of predefined color names, RGB (red green blue),HEX(hexadecimal red green blue),HSL(hue saturation lightness) coloring systems.

Table Tags:
<table>    Defines a table
<th>       Defines a header cell in a table
<tr>       Defines a row in a table
<td>       Defines a cell in a table
<caption>  Defines a table caption
<colgroup> Specifies a group of one or more columns in a table for formatting
<col>      Specifies column properties for each column within a <colgroup> element
<thead>    Groups the header content in a table
<tbody>    Groups the body content in a table
<tfoot>    Groups the footer content in a table

List Tags:
<ul>	Defines an unordered list
<ol>	Defines an ordered list
<li>	Defines a list item
<dl>	Defines a description list
<dt>	Defines a term in a description list
<dd>	Describes the term in a description list

Block and Inline Elements:
Block-level element always starts on new line, takes up the ful width available and has top and botom margin.
<div> Defines a section in a document(block-level). Often used as a container for other elements.
<span> Defines a section in a document(inline). Used to mark up a part of a text or a document.
!An inline element cannot contain a block-level element
Block-level elements:
<address><article><aside><blockquote><canvas><dd><div><dl><dt><fieldset><figcaption><figure><footer><form><h1>-<h6><header><hr><li><main><nav><noscript><ol><p><pre><section><table><tfoot><ul><video>
Inline elements:
<a><abbr><acronym><b><bdo><big><br><button><cite><code><dfn><em><i><img><input><kbd><label><map><object><output><q><samp><script><select><small><span><strong><sub><sup><textarea><time><tt><var>

Classes:
Multiple HTML elements can share the same class.
Tip: The class attribute can be used on any HTML element.
Note: The class name is case sensitive!
Class definition:
<style>
.city {
  background-color: tomato;
  color: white;
  padding: 10px;
}
</style>
Object:
<h2 class="city">London</h2>

Id element:
The HTML id attribute is used to specify a unique id for an HTML element.
You cannot have more than one element with the same id in an HTML document.
Note: The id name is case sensitive!
Note: The id name must contain at least one character, and must not contain whitespaces (spaces, tabs, etc.).
<h1 id="myHeader">My Header</h1>
Difference of class and id: A class name can be used by multiple HTML elements, while an id name must only be used by one HTML element within the page.
Bookmarks and Links:
HTML bookmarks are used to allow readers to jump to specific parts of a webpage.
Bookmarks can be useful if your page is very long.
To use a bookmark, you must first create it, and then add a link to it.
Then, when the link is clicked, the page will scroll to the location with the bookmark.
Bookmark:
<a href="#C4">Jump to Chapter 4</a>
Link:
<a href="html_demo.html#C4">Jump to Chapter 4</a>

HTML Iframes:
An HTML iframe is used to display a web page within a web page.
<iframe src="demo_iframe.htm" style="height:200px;width:300px;" title="Iframe Example"></iframe>

Javascript in HTML:
JavaScript makes HTML pages more dynamic and interactive.
<script>
document.getElementById("demo").innerHTML = "Hello JavaScript!";
</script>

File Paths:
A file path describes the location of a file in a web site's folder structure.
<img src="images/picture.jpg">	The "picture.jpg" file is located in the images folder in the current folder
<img src="/images/picture.jpg">	The "picture.jpg" file is located in the images folder at the root of the current web
<img src="../picture.jpg">	The "picture.jpg" file is located in the folder one level up from the current folder

An absolute file path is the full URL to a file: <img src="https://www.w3schools.com/images/picture.jpg" alt="Mountain">

Head Element:
The HTML <head> element is a container for the following elements: <title>, <style>, <meta>, <link>, <script>, and <base>.
The <meta> element: Typically used to specify the character set, page description, keywords, author of the document, and viewport settings.
The metadata will not be displayed on the page, but are used by browsers (how to display content or reload page), by search engines (keywords), and other web services.
Define the character set used: <meta charset="UTF-8">
Define keywords for search engines: <meta name="keywords" content="HTML, CSS, JavaScript">
Define a description of your web page: <meta name="description" content="Free Web tutorials">
Define the author of a page: <meta name="author" content="John Doe">
Refresh document every 30 seconds: <meta http-equiv="refresh" content="30">
Setting the viewport to make your website look good on all devices: <meta name="viewport" content="width=device-width, initial-scale=1.0">
Viewport: The viewport is the user's visible area of a web page. It varies with the device (it will be smaller on a mobile phone than on a computer screen).
<meta name="viewport" content="width=device-width, initial-scale=1.0">
Base: The <base> element specifies the base URL and/or target for all relative URLs in a page.
!The <base> tag must have either an href or a target attribute present, or both.
!There can only be one single <base> element in a document!

Layout Elements:
<header> - Defines a header for a document or a section
<nav> - Defines a set of navigation links
<section> - Defines a section in a document
<article> - Defines an independent, self-contained content
<aside> - Defines content aside from the content (like a sidebar)
<footer> - Defines a footer for a document or a section
<details> - Defines additional details that the user can open and close on demand
<summary> - Defines a heading for the <details> element

Responsiveness:
Responsive Web Design is about using HTML and CSS to automatically resize, hide, shrink, or enlarge, a website, to make it look good on all devices (desktops, tablets, and phones)
Examples:
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<img src="img_girl.jpg" style="width:100%;">
<img src="img_girl.jpg" style="max-width:100%;height:auto;">
<h1 style="font-size:10vw">Hello World</h1>
!Viewport is the browser window size. 1vw = 1% of viewport width

Computer code:
HTML contains several elements for defining user input and computer code: <code></code>
Keyboard input: <kbd></kbd>
Sample output: <samp></samp>
Variables: <var></var>

XHTML:
XHTML stands for EXtensible HyperText Markup Language
XHTML is a stricter, more XML-based version of HTML
XHTML is HTML defined as an XML application
XHTML is supported by all major browsers

XHTML was developed to make HTML more extensible and flexible to work with other data formats (such as XML).
In addition, browsers ignore errors in HTML pages, and try to display the website even if it has some errors in the markup. So XHTML comes with a much stricter error handling.

All Form Elements:
The <form> element is used to create an HTML form for user input.
<input type="text">	Displays a single-line text input field
<input type="radio">	Displays a radio button (for selecting one of many choices)
<input type="checkbox">	Displays a checkbox (for selecting zero or more of many choices)
<input type="submit">	Displays a submit button (for submitting the form)
<input type="button">	Displays a clickable button
<form>	Defines an HTML form for user input
<input>	Defines an input control
<textarea>	Defines a multiline input control (text area)
<label>	Defines a label for an <input> element
<fieldset>	Groups related elements in a form
<legend>	Defines a caption for a <fieldset> element
<select>	Defines a drop-down list
<optgroup>	Defines a group of related options in a drop-down list
<option>	Defines an option in a drop-down list
<button>	Defines a clickable button
<datalist>	Specifies a list of pre-defined options for input controls
<output>	Defines the result of a calculation

All Form Attribute Elements:
accept-charset	Specifies the character encodings used for form submission
action	        Specifies where to send the form-data when a form is submitted
autocomplete	Specifies whether a form should have autocomplete on or off
enctype	        Specifies how the form-data should be encoded when submitting it to the server (only for method="post")
method	        Specifies the HTTP method to use when sending form-data
name	        Specifies the name of the form
novalidate	Specifies that the form should not be validated when submitted
rel	        Specifies the relationship between a linked resource and the current document
target	        Specifies where to display the response that is received after submitting the form

All Input Types:
<input type="button">
<input type="checkbox">
<input type="color">
<input type="date">
<input type="datetime-local">
<input type="email">
<input type="file">
<input type="hidden">
<input type="image">
<input type="month">
<input type="number">
<input type="password">
<input type="radio">
<input type="range">
<input type="reset">
<input type="search">
<input type="submit">
<input type="tel">
<input type="text">
<input type="time">
<input type="url">
<input type="week">

All input restrictions:
checked	        Specifies that an input field should be pre-selected when the page loads (for type="checkbox" or type="radio")
disabled	Specifies that an input field should be disabled
max	        Specifies the maximum value for an input field
maxlength	Specifies the maximum number of character for an input field
min	        Specifies the minimum value for an input field
pattern	        Specifies a regular expression to check the input value against
readonly	Specifies that an input field is read only (cannot be changed)
required	Specifies that an input field is required (must be filled out)
size	        Specifies the width (in characters) of an input field
step	        Specifies the legal number intervals for an input field
value	        Specifies the default value for an input field

Canvas and SVG:
The HTML <canvas> element is used to draw graphics on a web page.
The <canvas> element is only a container for graphics. You must use JavaScript to actually draw the graphics.
<canvas id="myCanvas" width="200" height="100"></canvas>
Note: Always specify an id attribute (to be referred to in a script), and a width and height attribute to define the size of the canvas. To add a border, use the style attribute.
SVG defines vector-based graphics in XML format.
SVG stands for Scalable Vector Graphics
SVG is used to define graphics for the Web
SVG is recomended.

Canvas
Resolution dependent
No support for event handlers
Poor text rendering capabilities
You can save the resulting image as .png or .jpg
Well suited for graphic-intensive games
SVG
Resolution independent
Support for event handlers
Best suited for applications with large rendering areas (Google Maps)
Slow rendering if complex (anything that uses the DOM a lot will be slow)
Not suited for game applications

Multimedia: Multimedia on the web is sound, music, videos, movies, and animations.
HTML supported video formats : Ogg,WebM, MPEG-4 or MP4
HTML supported audio formats: Ogg, Wav,mp3

Multimedia tags:
<video> 	Defines a video or movie
<source>	Defines multiple media resources for media elements, such as <video> and <audio>
<track> 	Defines text tracks in media players
<audio>	        Defines sound content





References:
w3schools.com,HTML
